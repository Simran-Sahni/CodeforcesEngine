E. Minlexestime 1 secondmemory 256 Some time ago Lesha found an entertaining string $$$s$$$ consisting of lowercase English letters. Lesha immediately developed an unique algorithm for this string and shared it with you. The algorithm is as follows.Lesha chooses an arbitrary (possibly zero) number of pairs on positions $$$(i, i + 1)$$$ in such a way that the following conditions are satisfied:   for each pair $$$(i, i + 1)$$$ the inequality $$$0 \le i < |s| - 1$$$ holds;  for each pair $$$(i, i + 1)$$$ the equality $$$s_i = s_{i + 1}$$$ holds;  there is no index that is contained in more than one pair.  After that Lesha removes all characters on indexes contained in these pairs and the algorithm is over. Lesha is interested in the lexicographically smallest strings he can obtain by applying the algorithm to the suffixes of the given string.InputThe only line contains the string $$$s$$$ ($$$1 \le |s| \le 10^5$$$) â€” the initial string consisting of lowercase English letters only.OutputIn $$$|s|$$$ lines print the lengths of the answers and the answers themselves, starting with the answer for the longest suffix. The output can be large, so, when some answer is longer than $$$10$$$ characters, instead print the first $$$5$$$ characters, then "...", then the last $$$2$$$ characters of the answer.     dp      greedy      implementation      strings      *2700 